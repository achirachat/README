สร้าง Smart Contract สำหรับระบบ Ecommerce ของเรา โดยสร้างไฟล์ชื่อ Shop.sol ในโฟลเดอร์เดียวกันค่ะ
สำหรับ Smart Contract นี้ ผู้เขียนให้ประกอบด้วย 3 ฟังก์ชันด้วยกัน คือ
ฟังก์ชันเพิ่มสินค้าในฐานข้อมูล
ฟังก์ชันรับรายละเอียดของสินค้า
ฟังก์ชันสั่งซื้อสินค้า
โค้ดที่ได้จะเป็นดังด้านล่างค่ะ
---------------------------
pragma solidity >=0.4.25 <0.6.0;

import "./Token.sol";

contract Shop {
    struct Product {
        string name;
        string imgPath;
        uint256 price;
        uint256 quantity;
        address seller;
    }
    event AddedProduct(uint256 pid, address seller, uint256 timestamp);
    event BuyProduct(uint256 pid, address buyer, uint256 timestamp);
    mapping (uint256 => Product) products;
    mapping (uint256 => address[]) buying;
    Token token;

    constructor (address _tokenAddress) public {
        token = Token(_tokenAddress);
    }

    function addProduct(
        uint256 _pid,
        string memory _name,
        uint256 _price,
        uint256 _quantity,
        string memory _imgPath,
        uint256 timestamp
    ) public {
        products[_pid] = Product({
            name: _name,
            imgPath: _imgPath,
            price: _price,
            quantity: _quantity,
            seller: msg.sender
        });
        emit AddedProduct(_pid, msg.sender, timestamp);
    }

    function getProduct(uint256 _pid) public view returns (string memory, uint256, uint256, string memory, address) {
        Product memory product = products[_pid];
        return (product.name, product.price, product.quantity, product.imgPath, product.seller);
    }

    function buyProduct(uint256 _pid, uint256 _timestamp) public {
        require(products[_pid].quantity > 0, "Product is sold out");

        Product storage product = products[_pid];
        address _buyer = msg.sender;
        token.transfer(_buyer, product.seller, product.price);

        product.quantity -= 1;

        buying[_pid].push(_buyer);
        emit BuyProduct(_pid, _buyer, _timestamp);
    }
}
--------------------------
คำสั่ง Compile smart contracts
พิมพ์ truffle compile
Truffle ช่วยให้การพัฒนา Smart Contract เป็นเรื่องที่ง่าย ไม่ว่าจะเขียน Smart Contract สักกี่ตัว Truffle ก็จัดการ Compile ให้อยู่ในทุกรูปแบบ เพียงแค่เราพิมพ์คำสั่งเดียวเท่านั้น
